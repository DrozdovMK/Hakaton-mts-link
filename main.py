from scripts.getting_data import json_getter, func # взятие данных
# from scripts.embedding_model import universal_sentence_encoder # эмбеддинги USE
from scripts.profanity_check import profanity_processing # обработка ненормативной лексики
from scripts.summarizer import gpt_summarizer # обобщение фраз в кластере
a = func(5,7)
print(a)
# 12

bad_sentence = "Блять нахуй сука ничего не работает, заебало все, я еблуша"
prof_proc = profanity_processing(ratio_to_keep=0.6)
print(prof_proc.transform(bad_sentence))
# Б**ть н**уй с**а ничего не работает, за***ло все, я е***ша

responses = [
    "Встал, сделал зарядку, позавтракал и отправился на работу.",
    "Спал до последнего, еле успел собраться на работу.",
    "Как обычно, зарядка, душ, кофе, и на работу.",
    "Встал, сделал зарядку, позавтракал и, с хорошим настроением, поехал на работу.",
    "Встал, попил кофе и пошел на работу.",
    "Я люблю поспать, поэтому утром я обычно сплю до последнего.",
    "Встал, сделал зарядку и позавтракал овсянкой с фруктами.",
    "Утром я люблю готовить себе завтрак, поэтому провел полчаса на кухне, готовя омлет.",
    "Утром я люблю смотреть новости, поэтому встал пораньше и посмотрел утренний выпуск.",
    "Встал, попил кофе и почитал новости.",
    "С утра я люблю заниматься спортом, поэтому сегодня была пробежка в парке.",
    "Утро – это мое любимое время дня, поэтому я люблю вставать рано и наслаждаться тишиной.",
    "Я люблю готовить, поэтому утром я обычно готовлю себе завтрак.",
    "Утром я обычно занимаюсь йогой, это помогает мне начать день с позитива.",
    "Я люблю спать, поэтому утром я обычно сплю до последнего.",
    "Встал, попил кофе и пошел на работу.",
    "Утром я люблю читать книги, поэтому я провел час за чтением.",
    "Я люблю слушать музыку, поэтому утром я включаю любимый плейлист.",
    "Утром я люблю заниматься спортом, поэтому сегодня я пошел в тренажерный зал.",
    "Утром я люблю гулять на свежем воздухе, поэтому я пошел в парк.",
    "Встал, позавтракал и вышел из дома."
]

sumgpt = gpt_summarizer(offline=True, count_offline_words=4)

print(prof_proc.transform(sumgpt.summarize(responses)))